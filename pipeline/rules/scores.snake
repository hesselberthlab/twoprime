
rule process_signals:
    input:
        'genomedata/all.genomedata'
    output:
        'scores/{sample}.{strand}.score{score}.bg.gz'
    params:
        sample = lambda wildcards: wildcards.sample,
        strand = lambda wildcards: wildcards.strand,
        score = lambda wildcards: wildcards.score,
        trackname = lambda wildcards:
            wildcards.sample + '.' + wildcards.strand,
        job_name = 'proc_signals.{sample}.{strand}.{score}'
    log:
        'logs/{sample}/proc_signals.{strand}.log'
    shell:
        "twoprime-process-signals {input} "
        "--trackname {params.sample}.{params.strand} "
        "--score {params.score} | gzip -c > {output}"

rule signal_bigwigs:
    input:
        'scores/{sample}.{strand}.score{score}.bg.gz'
    output:
        temp('scores/{sample}.{strand}.{score}.bg'),
        'scores/{sample}.{strand}.score{score}.bw'
    params:
        tempfile = 'scores/{sample}.{strand}.{score}.bg',
        job_name = 'coverage.bigwig.{sample}.{strand}',
    log:
        'log/{sample}/scores.bigwig.{strand}.{score}.log'
    shell:
        "zcat {input} > {params.tempfile}; "
        "bedGraphToBigWig {params.tempfile} {CHROMSIZE} {output[1]}"


